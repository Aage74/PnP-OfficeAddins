{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/taskpane/taskpane.ts","webpack:///./src/functions/functions.ts","webpack:///./src/commands/commands.ts","webpack:///(webpack)/buildin/global.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","btnStoreValue","document","getElementById","innerText","g","getGlobal","state","keys","add","values","ad","btnGetValue","forEach","element","index","Office","initialize","style","display","onclick","CustomFunctions","associate","clock","currentTime","logMessage","first","second","invocation","timer","setInterval","time","setResult","onCanceled","clearInterval","Date","toLocaleTimeString","increment","incrementBy","result","message","console","log","self","window","global","undefined","onReady","action","event","completed","this","Function","e"],"mappings":"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","file":"taskpane.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 310);\n","import { add, clock, currentTime, logMessage } from '../functions/functions';\nimport { getGlobal } from '../commands/commands';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n/* global console, document, Excel, Office */\n\n// The initialize function must be run each time a new page is loaded\nOffice.initialize = () => {\n  let g = getGlobal() as any;\n  let keys: any[] = [];\n  let values: any[] = [];\n  g = {\n    \"keys\": keys,\n    \"values\": values\n  } as any\n  \n\n  document.getElementById(\"sideload-msg\").style.display = \"none\";\n  document.getElementById(\"app-body\").style.display = \"flex\";\n  document.getElementById(\"btnStoreValue\").onclick = btnStoreValue;\n  document.getElementById(\"btnGetValue\").onclick = btnGetValue;\n  \n  // eslint-disable-next-line no-undef\n  CustomFunctions.associate('ADD', add);\n\n  // eslint-disable-next-line no-undef\n  CustomFunctions.associate('CLOCK', clock);\n\n  // eslint-disable-next-line no-undef\n  CustomFunctions.associate('CURRENTTIME', currentTime);\n\n  // eslint-disable-next-line no-undef\n  CustomFunctions.associate('LOGMESSAGE', logMessage);\n  \n};\n\nfunction btnStoreValue() {\n  let key = document.getElementById(\"txtKey\").innerText;\n  let value = document.getElementById(\"txtValue\").innerText;\n  let g = getGlobal() as any;\n  g.state.keys.add(key);\n  g.state.values.ad(value);\n}\n\nfunction btnGetValue() {\n  let g = getGlobal() as any;\n  let key = document.getElementById(\"txtKey\").innerText;\n  g.state.keys.forEach((element, index) => {\n    if (element === key)\n    {\n      document.getElementById(\"txtValue\").innerText = g.state.values[index];\n    }\n  });\n}","/**\n * Adds two numbers.\n * @customfunction\n * @param first First number\n * @param second Second number\n * @returns The sum of the two numbers.\n */\n/* global clearInterval, console, setInterval */\n\nexport function add(first: number, second: number): number {\n  return first + second;\n}\n\n/**\n * Displays the current time once a second.\n * @customfunction\n * @param invocation Custom function handler\n */\nexport function clock(invocation: CustomFunctions.StreamingInvocation<string>): void {\n  const timer = setInterval(() => {\n    const time = currentTime();\n    invocation.setResult(time);\n  }, 1000);\n\n  invocation.onCanceled = () => {\n    clearInterval(timer);\n  };\n}\n\n/**\n * Returns the current time.\n * @returns String with the current time formatted for the current locale.\n */\nexport function currentTime(): string {\n  return new Date().toLocaleTimeString();\n}\n\n/**\n * Increments a value once a second.\n * @customfunction\n * @param incrementBy Amount to increment\n * @param invocation Custom function handler\n */\nexport function increment(incrementBy: number, invocation: CustomFunctions.StreamingInvocation<number>): void {\n  let result = 0;\n  const timer = setInterval(() => {\n    result += incrementBy;\n    invocation.setResult(result);\n  }, 1000);\n\n  invocation.onCanceled = () => {\n    clearInterval(timer);\n  };\n}\n\n/**\n * Writes a message to console.log().\n * @customfunction LOG\n * @param message String to write.\n * @returns String to write.\n */\nexport function logMessage(message: string): string {\n  console.log(message);\n\n  return message;\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global global, Office, self, window */\n\nOffice.onReady(() => {\n  // If needed, Office.js is ready to be called\n});\n\n/**\n * Shows a notification when the add-in command is executed.\n * @param event\n */\nfunction action(event: Office.AddinCommands.Event) {\n  // Your code goes here\n\n  // Be sure to indicate when the add-in command function is complete\n  event.completed();\n}\n\nexport function getGlobal() {\n  return typeof self !== \"undefined\"\n    ? self\n    : typeof window !== \"undefined\"\n    ? window\n    : typeof global !== \"undefined\"\n    ? global\n    : undefined;\n}\n\nconst g = getGlobal() as any;\n\n// the add-in command functions need to be available in global scope\ng.action = action;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}